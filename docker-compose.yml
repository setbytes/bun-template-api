version: '3.3'

networks:
  template-net:
    name: template-net
    driver: bridge

services:
  mysql-prod:
    image: mysql:latest
    container_name: mysql-template-prod
    environment:
      MYSQL_ROOT_PASSWORD: '@template_123'
      MYSQL_DATABASE: template_prod
      MYSQL_USER: template
      MYSQL_PASSWORD: '@template_123'
    ports:
      - "3306:3306"
    volumes:
      - /var/docker/volumes/template-mysql-prod:/var/lib/mysql
    networks:
      - template-net

  mysql-dev:
    image: mysql:latest
    container_name: mysql-template-dev
    environment:
      MYSQL_ROOT_PASSWORD: '@template_123'
      MYSQL_DATABASE: template_dev
      MYSQL_USER: template
      MYSQL_PASSWORD: '@template_123'
    ports:
      - "3307:3306"
    volumes:
      - /var/docker/volumes/template-mysql-dev:/var/lib/mysql
    networks:
      - template-net

  bun-api:
    build:
      context: .
      dockerfile: Dockerfile
    # container_name: bun-api
    environment:
      NODE_ENV: production
    # ports:
    #   - "3000:8090"
    ports:
      - "8090"
    volumes:
      - /var/docker/volumes/template-public-prod:/usr/src/app/src/presentation/public
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    depends_on:
      - mysql-prod
      - mysql-dev
    networks:
      - template-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8090/v1/health || exit 1"]
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
      
  nginx:
    image: nginx:latest
    container_name: nginx-reverse-proxy
    ports:
      - "3000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - bun-api
    networks:
      - template-net